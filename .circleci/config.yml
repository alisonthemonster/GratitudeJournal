version: 2.1

references:
  workspace: &workspace
               ~/src


  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build/intermediates
        - app/build/outputs/apk
        - app/build/outputs/code-coverage
        - app/build/test-results
  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace
  attach_firebase_workspace: &attach_firebase_workspace
    attach_workspace:
      at: *workspace
  persist_firebase_workspace: &persist_firebase_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - firebase

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-29
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UseContainerSupport"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  gcloud_config: &gcloud_config
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    environment:
      TERM: dumb

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies


  gradle_clean: &gradle_clean
    run:
      name: Run gradle clean
      command: ./gradlew clean

  gradle_key: &gradle_key
                v3-jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  decrypt_gcloud_key: &decrypt_gcloud_key
    run:
      name: Decrypt Google Cloud credentials
      command: echo $GCLOUD_SERVICE_KEY | base64 -di > ${HOME}/client-secret.json

jobs:

  report_coverage:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *attach_debug_workspace
      - *attach_firebase_workspace
      - run:
          name: Move Firebase coverage report
          command: mkdir -p app/build/outputs/code-coverage/connected && cp firebase/walleye-27-en_US-portrait/artifacts/coverage.ec app/build/outputs/code-coverage/connected/coverage.ec
      - run:
          name: Generate JaCoCo report
          command: ./gradlew -PciBuild=true jacocoTestReport
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/
      - store_test_results:
          path: app/build/reports/


  test_instrumented:
    <<: *gcloud_config
    steps:
      - checkout
      - *attach_debug_workspace
      - *decrypt_gcloud_key
      - run:
          name: Set Google Cloud target project
          command: gcloud config set project gratitude-journal-app
      - run:
          name: Authenticate with Google Cloud
          command: |
            gcloud auth activate-service-account presently-cicd-service-account@gratitude-journal-app.iam.gserviceaccount.com --key-file ${HOME}/client-secret.json
      - run:
          name: Run instrumented test on Firebase Test Lab
          command: gcloud firebase test android run --type instrumentation --app app/build/outputs/apk/debug/app-debug.apk --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device model=walleye,version=27,locale=en_US,orientation=portrait --environment-variables coverage=true,coverageFile=/sdcard/coverage.ec --directories-to-pull=/sdcard --timeout 20m
      - run:
          name: Create directory to store test results
          command: mkdir firebase
      - run:
          name: Download instrumented test results from Firebase Test Lab
          command: gsutil -m cp -r -U "`gsutil ls gs://test-lab-633h5cj3dy2zq-nfytdzn1u6s8i | tail -1`*" /root/src/firebase/
      - run:
          name: Record to screenshotbot
          command: |
            curl https://screenshotbot.io/recorder.sh | sh
            cd ~/src && ~/screenshotbot/recorder \
              --directory /root/src/firebase/*/artifacts/sdcard/screenshots/journal.gratitude.com.gratitudejournal.test/screenshots-default/screenshot_bundle.zip \
              --channel Presently \
              --metadata /root/src/firebase/*/artifacts/sdcard/screenshots/journal.gratitude.com.gratitudejournal.test/screenshots-default/metadata.xml \
              --production \
              --branch ${CIRCLE_BRANCH} \
              --main-branch develop \
              --api-key ${SCREENSHOTBOT_API_KEY} \
              --repo-url ${CIRCLE_REPOSITORY_URL} \
              --api-secret ${SCREENSHOTBOT_API_SECRET}
      - *persist_firebase_workspace
      - store_artifacts:
          path: firebase/
          destination: /firebase/

  build_debug:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Gradle build (debug)
          command: ./gradlew -PciBuild=true :app:assembleDebug :app:assembleAndroidTest
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/


workflows:
  version: 2
  workflow:
    jobs:
      - build_debug
      - test_instrumented:
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/
          requires:
            - build_debug
      - report_coverage:
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/
          requires:
            - build_debug
            - test_instrumented
